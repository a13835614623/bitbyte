<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzk.bitbyte.mapper.AuthorityMapper">
    <resultMap id="PermissionResultMap" type="com.zzk.bitbyte.po.Permission">
        <id column="perm_id" jdbcType="VARCHAR" property="permId" />
        <result column="perm_str" jdbcType="VARCHAR" property="permStr" />
        <result column="perm_desc" jdbcType="VARCHAR" property="permDesc" />
        <result column="createAt" jdbcType="TIMESTAMP" property="createat" />
        <result column="updateAt" jdbcType="TIMESTAMP" property="updateat" />
    </resultMap>
    <resultMap id="RoleResultMap" type="com.zzk.bitbyte.po.Role">
        <id column="role_id" jdbcType="VARCHAR" property="roleId" />
        <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
        <result column="role_str" jdbcType="VARCHAR" property="roleStr" />
        <result column="createAt" jdbcType="TIMESTAMP" property="createat" />
        <result column="updateAt" jdbcType="TIMESTAMP" property="updateat" />
    </resultMap>


    <!--    根据用户id查询用户的角色-->
    <select id="getRoleListByUserId" parameterType="string" resultMap="RoleResultMap">
        select r.role_id, r.role_desc, r.role_str, r.createAt, r.updateAt
        from role r,
             user_role ur
        where r.role_id=ur.role_id and ur.user_id = #{userId}
    </select>

    <!--    根据用户id查询用户权限-->
    <select id="getPermissionListByUserId" parameterType="string" resultMap="PermissionResultMap">
        select p.perm_id,
               p.perm_str,
               p.perm_desc,
               p.createAt,
               p.updateAt
        from user left join user_permission up on user.user_id = up.user_id
        left join permission p on up.pern_id = p.perm_id
        where up.user_id=#{userId}
    </select>
    <!--    根据角色id查询角色权限-->
    <select id="getPermissionListByRoleId" parameterType="string" resultMap="PermissionResultMap">
        select p.perm_id, p.perm_str, p.perm_desc, p.createAt, p.updateAt
        from role_permission rp,
             permission p
        where rp.role_id = #{roleId}
          and p.perm_id = rp.perm_id
    </select>

    <!--    根据用户邮箱或者email获取角色-->
    <select id="getRoleListByUserMobileOrEmail" parameterType="string" resultMap="RoleResultMap">
        select u.user_id,
               user_name,
               user_sex,
               user_mobile,
               user_birthday,
               user_address,
               user_password,
               user_email,
               createAt,
               updateAt,
               user_pic
        from user u
        where u.user_email = #{mobileOrEmail}
           or u.user_mobile = #{mobileOrEmail}
    </select>

    <!--    根据用户邮箱或者email获取权限-->
    <select id="getPermissionListByUserMobileOrEmail" parameterType="string" resultMap="PermissionResultMap">
        select p.perm_id,
               p.perm_str,
               p.perm_desc,
               p.createAt,
               p.updateAt
        from permission p,
             user_role ur,
             role_permission rp,
             user u
        where (u.user_email = #{mobileOrEmail}
            or u.user_mobile = #{mobileOrEmail})
          and p.perm_id = rp.perm_id
          and rp.role_id = ur.role_id
          and ur.user_id = u.user_id
    </select>

</mapper>