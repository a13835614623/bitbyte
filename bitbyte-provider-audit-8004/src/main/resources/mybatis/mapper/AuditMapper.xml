<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzk.bitbyte.mapper.AuditMapper">
  <resultMap id="BaseResultMap" type="com.zzk.bitbyte.po.Audit">
    <id column="audit_id" jdbcType="VARCHAR" property="auditId" />
    <result column="audit_article" jdbcType="VARCHAR" property="auditArticle" />
    <result column="audit_state" jdbcType="INTEGER" property="auditState" />
    <result column="audit_reason" jdbcType="VARCHAR" property="auditReason" />
    <result column="audit_more" jdbcType="VARCHAR" property="auditMore" />
    <result column="audit_user" jdbcType="VARCHAR" property="auditUser" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="createAt" jdbcType="TIMESTAMP" property="createat" />
    <result column="updateAt" jdbcType="TIMESTAMP" property="updateat" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    audit_id, audit_article, audit_state, audit_reason, audit_more, audit_user, audit_time, 
    createAt, updateAt
  </sql>
  <select id="selectByExample" parameterType="com.zzk.bitbyte.po.AuditExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from audit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from audit
    where audit_id = #{auditId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from audit
    where audit_id = #{auditId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzk.bitbyte.po.AuditExample">
    delete from audit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzk.bitbyte.po.Audit">
    insert into audit (audit_id, audit_article, audit_state, 
      audit_reason, audit_more, audit_user, 
      audit_time, createAt, updateAt
      )
    values (#{auditId,jdbcType=VARCHAR}, #{auditArticle,jdbcType=VARCHAR}, #{auditState,jdbcType=INTEGER}, 
      #{auditReason,jdbcType=VARCHAR}, #{auditMore,jdbcType=VARCHAR}, #{auditUser,jdbcType=VARCHAR}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{createat,jdbcType=TIMESTAMP}, #{updateat,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzk.bitbyte.po.Audit">
    insert into audit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="auditId != null">
        audit_id,
      </if>
      <if test="auditArticle != null">
        audit_article,
      </if>
      <if test="auditState != null">
        audit_state,
      </if>
      <if test="auditReason != null">
        audit_reason,
      </if>
      <if test="auditMore != null">
        audit_more,
      </if>
      <if test="auditUser != null">
        audit_user,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="createat != null">
        createAt,
      </if>
      <if test="updateat != null">
        updateAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="auditId != null">
        #{auditId,jdbcType=VARCHAR},
      </if>
      <if test="auditArticle != null">
        #{auditArticle,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null">
        #{auditState,jdbcType=INTEGER},
      </if>
      <if test="auditReason != null">
        #{auditReason,jdbcType=VARCHAR},
      </if>
      <if test="auditMore != null">
        #{auditMore,jdbcType=VARCHAR},
      </if>
      <if test="auditUser != null">
        #{auditUser,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createat != null">
        #{createat,jdbcType=TIMESTAMP},
      </if>
      <if test="updateat != null">
        #{updateat,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzk.bitbyte.po.AuditExample" resultType="java.lang.Long">
    select count(*) from audit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update audit
    <set>
      <if test="record.auditId != null">
        audit_id = #{record.auditId,jdbcType=VARCHAR},
      </if>
      <if test="record.auditArticle != null">
        audit_article = #{record.auditArticle,jdbcType=VARCHAR},
      </if>
      <if test="record.auditState != null">
        audit_state = #{record.auditState,jdbcType=INTEGER},
      </if>
      <if test="record.auditReason != null">
        audit_reason = #{record.auditReason,jdbcType=VARCHAR},
      </if>
      <if test="record.auditMore != null">
        audit_more = #{record.auditMore,jdbcType=VARCHAR},
      </if>
      <if test="record.auditUser != null">
        audit_user = #{record.auditUser,jdbcType=VARCHAR},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createat != null">
        createAt = #{record.createat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateat != null">
        updateAt = #{record.updateat,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update audit
    set audit_id = #{record.auditId,jdbcType=VARCHAR},
      audit_article = #{record.auditArticle,jdbcType=VARCHAR},
      audit_state = #{record.auditState,jdbcType=INTEGER},
      audit_reason = #{record.auditReason,jdbcType=VARCHAR},
      audit_more = #{record.auditMore,jdbcType=VARCHAR},
      audit_user = #{record.auditUser,jdbcType=VARCHAR},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      createAt = #{record.createat,jdbcType=TIMESTAMP},
      updateAt = #{record.updateat,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzk.bitbyte.po.Audit">
    update audit
    <set>
      <if test="auditArticle != null">
        audit_article = #{auditArticle,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null">
        audit_state = #{auditState,jdbcType=INTEGER},
      </if>
      <if test="auditReason != null">
        audit_reason = #{auditReason,jdbcType=VARCHAR},
      </if>
      <if test="auditMore != null">
        audit_more = #{auditMore,jdbcType=VARCHAR},
      </if>
      <if test="auditUser != null">
        audit_user = #{auditUser,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createat != null">
        createAt = #{createat,jdbcType=TIMESTAMP},
      </if>
      <if test="updateat != null">
        updateAt = #{updateat,jdbcType=TIMESTAMP},
      </if>
    </set>
    where audit_id = #{auditId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzk.bitbyte.po.Audit">
    update audit
    set audit_article = #{auditArticle,jdbcType=VARCHAR},
      audit_state = #{auditState,jdbcType=INTEGER},
      audit_reason = #{auditReason,jdbcType=VARCHAR},
      audit_more = #{auditMore,jdbcType=VARCHAR},
      audit_user = #{auditUser,jdbcType=VARCHAR},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      createAt = #{createat,jdbcType=TIMESTAMP},
      updateAt = #{updateat,jdbcType=TIMESTAMP}
    where audit_id = #{auditId,jdbcType=VARCHAR}
  </update>
</mapper>